/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 ./public/assets/models/loactionBox.glb -t 
*/

import type * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { type GLTF } from "three-stdlib";
import { api } from "~/utils/api";

type GLTFResult = GLTF & {
  nodes: {
    CardboardBox_LP_lambert1_0: THREE.Mesh;
  };
  materials: {
    lambert1: THREE.MeshStandardMaterial;
  };
};

type LocationBoxProps = JSX.IntrinsicElements["group"] & {
  locationId?: any;
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export const LocationBox = (props: LocationBoxProps) => {
  const { nodes, materials } = useGLTF(
    "assets/models/loactionBox.glb"
  ) as GLTFResult;

  const { data, isLoading } = api.products.productByLocationId.useQuery(
    {
      locationId: props.locationId,
    },
    {
      enabled: props.locationId !== null,
    }
  );
  const [material, setMaterial] = useState(materials.lambert1);

  useEffect(() => {
    if (!isLoading && data) {
      const tempColor =
        data[0]?.movingStatus === "FAST"
          ? "#9DBAD5"
          : data[0]?.movingStatus === "MEDIUM"
          ? "#8FC1A9"
          : data[0]?.movingStatus === "SLOW"
          ? "#DAB5D2"
          : "#70658A";
      const clonedMaterial = materials.lambert1.clone();
      clonedMaterial.color.set(tempColor);
      setMaterial(clonedMaterial);
    }
  }, [data]);

  return (
    <group
      {...props}
      dispose={null}
      // onPointerMissed={(e) => e.button === 0 && api.refresh().fit()}
    >
      <group scale={0.01}>
        <mesh
          geometry={nodes.CardboardBox_LP_lambert1_0.geometry}
          material={material}
          position={[0, 25, 0]}
          scale={[0.95, 1.4, 0.98]}
        >
          {/* <meshStandardMaterial color={'yellow'} /> */}
        </mesh>
      </group>
    </group>
  );
};

useGLTF.preload("assets/models/loactionBox.glb");
